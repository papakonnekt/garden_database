# Generated by Django 5.2 on 2025-04-15 07:11

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("horticulture", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="CompanionPlantingInteraction",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "interaction_code",
                    models.CharField(
                        help_text="Unique code, e.g., PEST_REPEL_APHID",
                        max_length=100,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "interaction_type",
                    models.CharField(
                        choices=[
                            ("BEN", "Beneficial"),
                            ("DET", "Detrimental"),
                            ("NEU", "Neutral"),
                        ],
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "mechanism_description",
                    models.TextField(
                        blank=True,
                        help_text="Explanation of how the interaction works",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Companion Planting Interaction",
                "verbose_name_plural": "Companion Planting Interactions",
            },
        ),
        migrations.AlterModelOptions(
            name="region",
            options={
                "verbose_name": "Climatic Region/Zone",
                "verbose_name_plural": "Climatic Regions/Zones",
            },
        ),
        # Operation moved further down after AddField operations
        migrations.RemoveField(
            model_name="disease",
            name="control_chemical",
        ),
        migrations.RemoveField(
            model_name="disease",
            name="control_organic",
        ),
        migrations.RemoveField(
            model_name="fertilizer",
            name="name",
        ),
        migrations.RemoveField(
            model_name="fertilizer",
            name="nitrogen_pct",
        ),
        migrations.RemoveField(
            model_name="fertilizer",
            name="phosphorus_pct",
        ),
        migrations.RemoveField(
            model_name="fertilizer",
            name="potassium_pct",
        ),
        migrations.RemoveField(
            model_name="fertilizer",
            name="type",
        ),
        migrations.RemoveField(
            model_name="fertilizer",
            name="usage_instructions",
        ),
        migrations.RemoveField(
            model_name="pest",
            name="control_chemical",
        ),
        migrations.RemoveField(
            model_name="pest",
            name="control_organic",
        ),
        migrations.RemoveField(
            model_name="plant",
            name="sun_exposure",
        ),
        migrations.RemoveField(
            model_name="plant",
            name="water_needs",
        ),
        # Operation moved further down after AddField operations for zone_system and zone_identifier
        migrations.RemoveField(
            model_name="seed",
            name="source",
        ),
        migrations.RemoveField(
            model_name="seed",
            name="variety_name",
        ),
        migrations.RemoveField(
            model_name="soilprofile",
            name="amendments_rec",
        ),
        migrations.RemoveField(
            model_name="soilprofile",
            name="nutrient_levels",
        ),
        migrations.RemoveField(
            model_name="soilprofile",
            name="type",
        ),
        migrations.AddField(
            model_name="companionship",
            name="notes",
            field=models.TextField(
                blank=True,
                help_text="Additional notes about this specific pairing",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="companionship",
            name="plant_object",
            field=models.ForeignKey(
                help_text="The plant this relationship targets",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="companion_relationships_object",
                to="horticulture.plant",
            ),
        ),
        migrations.AddField(
            model_name="companionship",
            name="plant_subject",
            field=models.ForeignKey(
                help_text="The plant this relationship originates from",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="companion_relationships_subject",
                to="horticulture.plant",
            ),
        ),
        migrations.AlterUniqueTogether( # Corrected indentation and removed extra ),
            name="companionship",
            unique_together={("plant_subject", "plant_object")},
        ),
        migrations.AddField(
            model_name="companionship",
            name="strength_confidence",
            field=models.CharField(
                blank=True,
                choices=[
                    ("HI", "High"),
                    ("ME", "Medium"),
                    ("LO", "Low"),
                    ("AN", "Anecdotal"),
                ],
                max_length=2,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="disease",
            name="category",
            field=models.CharField(
                blank=True,
                choices=[
                    ("FUN", "Fungal"),
                    ("BAC", "Bacterial"),
                    ("INS", "Insect"),
                    ("VIR", "Viral"),
                    ("DEF", "Nutrient Deficiency"),
                    ("MAM", "Mammal"),
                    ("MOL", "Mollusk"),
                    ("ENV", "Environmental"),
                    ("OTH", "Other"),
                    ("UNK", "Unknown"),
                ],
                help_text="Category of the disease",
                max_length=3,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="disease",
            name="prevention_strategies",
            field=models.JSONField(
                blank=True, default=list, help_text="Array of prevention strategies"
            ),
        ),
        migrations.AddField(
            model_name="disease",
            name="scientific_name",
            field=models.CharField(
                blank=True,
                help_text="Optional scientific name (e.g., for fungus/bacteria)",
                max_length=100,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="disease",
            name="treatment_strategies",
            field=models.JSONField(
                blank=True,
                default=list,
                help_text="Array of treatment strategies (organic and conventional)",
            ),
        ),
        migrations.AddField(
            model_name="fertilizer",
            name="application_rate",
            field=models.JSONField(
                blank=True,
                default=list,
                help_text="Array of objects for application rates, e.g., [{'value': 1, 'unit': 'oz/gallon', 'context': 'foliar spray'}]",
            ),
        ),
        migrations.AddField(
            model_name="fertilizer",
            name="application_timing_frequency",
            field=models.TextField(
                blank=True,
                help_text="Recommended timing/frequency (e.g., 'Every 2 weeks during growing season')",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="fertilizer",
            name="base_type",
            field=models.CharField(
                blank=True,
                choices=[
                    ("ORG", "Organic"),
                    ("SYN", "Synthetic"),
                    ("MIN", "Mineral"),
                    ("UNK", "Unknown"),
                ],
                max_length=3,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="fertilizer",
            name="brand",
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name="fertilizer",
            name="compatibility_notes",
            field=models.TextField(
                blank=True,
                help_text="Compatibility issues (e.g., 'Do not mix with X')",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="fertilizer",
            name="fertilizer_name",
            field=models.CharField(max_length=150, null=True),
        ),
        migrations.AddField(
            model_name="fertilizer",
            name="form",
            field=models.CharField(
                blank=True,
                choices=[
                    ("LIQ", "Liquid"),
                    ("GRA", "Granular"),
                    ("POW", "Powder"),
                    ("SLO", "Slow-Release"),
                    ("FOL", "Foliar"),
                    ("SPI", "Spike"),
                    ("UNK", "Unknown"),
                ],
                max_length=3,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="fertilizer",
            name="micronutrient_composition",
            field=models.JSONField(
                blank=True,
                default=list,
                help_text="Array of objects for micronutrients, e.g., [{'nutrient': 'Iron (Fe)', 'value': 0.5, 'unit': '%'}]",
            ),
        ),
        migrations.AddField(
            model_name="fertilizer",
            name="recommended_for",
            field=models.TextField(
                blank=True,
                help_text="Recommended plant types or stages (e.g., 'Acid-loving plants', 'Vegetable gardens')",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="pest",
            name="category",
            field=models.CharField(
                choices=[
                    ("FUN", "Fungal"),
                    ("BAC", "Bacterial"),
                    ("INS", "Insect"),
                    ("VIR", "Viral"),
                    ("DEF", "Nutrient Deficiency"),
                    ("MAM", "Mammal"),
                    ("MOL", "Mollusk"),
                    ("ENV", "Environmental"),
                    ("OTH", "Other"),
                    ("UNK", "Unknown"),
                ],
                default="INS",
                help_text="Category of the pest",
                max_length=3,
            ),
        ),
        migrations.AddField(
            model_name="pest",
            name="prevention_strategies",
            field=models.JSONField(
                blank=True, default=list, help_text="Array of prevention strategies"
            ),
        ),
        migrations.AddField(
            model_name="pest",
            name="treatment_strategies",
            field=models.JSONField(
                blank=True,
                default=list,
                help_text="Array of treatment strategies (organic and conventional)",
            ),
        ),
        migrations.AddField(
            model_name="plant",
            name="additional_morphological_traits",
            field=models.JSONField(
                blank=True,
                default=dict,
                help_text="Object for additional traits like {'leaf_type': '...', 'stem_characteristics': '...', 'branching_pattern': '...'}",
            ),
        ),
        migrations.AddField(
            model_name="plant",
            name="common_names_list",
            field=models.JSONField(
                blank=True, default=list, help_text="Array of alternative common names"
            ),
        ),
        migrations.AddField(
            model_name="plant",
            name="family",
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name="plant",
            name="genus",
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name="plant",
            name="germination_period_days_max",
            field=models.IntegerField(
                blank=True, help_text="Typical maximum days for germination", null=True
            ),
        ),
        migrations.AddField(
            model_name="plant",
            name="germination_period_days_min",
            field=models.IntegerField(
                blank=True, help_text="Typical minimum days for germination", null=True
            ),
        ),
        migrations.AddField(
            model_name="plant",
            name="growth_stage_specific_npk",
            field=models.JSONField(
                blank=True,
                default=dict,
                help_text="Object for stage-specific NPK needs, e.g., {'seedling': '...', 'vegetative': '...'}",
            ),
        ),
        migrations.AddField(
            model_name="plant",
            name="harvest_seasonality",
            field=models.TextField(
                blank=True,
                help_text="Typical harvest season (e.g., 'Early Summer', 'Fall', 'Year-round zones 9+')",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="plant",
            name="lifecycle_details",
            field=models.TextField(
                blank=True,
                help_text="Optional descriptive text about lifecycle",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="plant",
            name="lifecycle_type",
            field=models.CharField(
                blank=True,
                choices=[("AN", "Annual"), ("PE", "Perennial"), ("BI", "Biennial")],
                max_length=2,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="plant",
            name="micronutrient_needs_desc",
            field=models.TextField(
                blank=True,
                help_text="Descriptive micronutrient needs (e.g., 'Sensitive to boron deficiency')",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="plant",
            name="moisture_requirements",
            field=models.CharField(
                blank=True,
                choices=[
                    ("LO", "Low"),
                    ("MO", "Moderate"),
                    ("HI", "High"),
                    ("BO", "Boggy"),
                ],
                max_length=2,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="plant",
            name="root_system_type",
            field=models.CharField(
                blank=True,
                help_text="e.g., Shallow Fibrous, Deep Taproot",
                max_length=100,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="plant",
            name="soil_ph_max",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Maximum preferred soil pH",
                max_digits=4,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="plant",
            name="soil_ph_min",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Minimum preferred soil pH",
                max_digits=4,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="plant",
            name="species",
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name="plant",
            name="subspecies_cultivar",
            field=models.CharField(
                blank=True,
                help_text="Subspecies or cultivar name, if applicable",
                max_length=100,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="plant",
            name="sunlight_requirements",
            field=models.CharField(
                blank=True,
                choices=[
                    ("FS", "Full Sun"),
                    ("PS", "Partial Sun"),
                    ("SH", "Partial Shade"),
                    ("FD", "Full Shade"),
                ],
                max_length=2,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="plant",
            name="temperature_tolerance_max_f",
            field=models.IntegerField(
                blank=True,
                help_text="Maximum hardy temperature in Fahrenheit",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="plant",
            name="temperature_tolerance_min_f",
            field=models.IntegerField(
                blank=True,
                help_text="Minimum hardy temperature in Fahrenheit",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="plant",
            name="variant_details",
            field=models.JSONField(
                blank=True,
                default=list,
                help_text="Array of objects describing variants, e.g., [{'variant_type': 'Determinate', 'description': '...'}]",
            ),
        ),
        migrations.AddField(
            model_name="plant",
            name="yield_estimates",
            field=models.TextField(
                blank=True,
                help_text="Descriptive yield estimates (e.g., 'lbs per plant', 'fruits per sq ft')",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="region",
            name="zone_identifier",
            field=models.CharField(
                help_text="The specific zone identifier within the system (e.g., '7a', '9b')",
                max_length=20,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="region",
            name="zone_system",
            field=models.CharField(
                default="USDA Hardiness Zones",
                help_text="The zoning system used (e.g., 'USDA Hardiness Zones')",
                max_length=50,
            ),
        ),
        migrations.AlterUniqueTogether(
            name="region",
            unique_together={("zone_system", "zone_identifier")},
        ),
        migrations.AddField(
            model_name="seed",
            name="catalogue_id",
            field=models.CharField(
                blank=True,
                help_text="Optional catalogue ID from the source",
                max_length=50,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="seed",
            name="optimal_planting_season",
            field=models.TextField(
                blank=True,
                help_text="Recommended planting season(s) (e.g., 'Spring after last frost')",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="seed",
            name="recommended_conditions",
            field=models.TextField(
                blank=True,
                help_text="Special conditions (e.g., 'Requires light for germination', 'Needs scarification')",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="seed",
            name="seed_name",
            field=models.CharField(
                help_text="Specific seed name, often includes variety (e.g., 'Beefsteak Tomato Seeds')",
                max_length=150,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="seed",
            name="seed_type",
            field=models.CharField(
                blank=True,
                choices=[
                    ("H", "Heirloom"),
                    ("F1", "Hybrid (F1)"),
                    ("OP", "Open-Pollinated"),
                    ("GMO", "Genetically Modified"),
                    ("UNK", "Unknown"),
                ],
                max_length=3,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="seed",
            name="source_brand",
            field=models.CharField(
                blank=True,
                help_text="Source or brand of the seeds",
                max_length=100,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="seed",
            name="sowing_instructions_text",
            field=models.TextField(
                blank=True, help_text="Detailed sowing instructions", null=True
            ),
        ),
        migrations.AddField(
            model_name="seed",
            name="storage_conditions",
            field=models.TextField(
                blank=True,
                help_text="Recommended storage conditions (e.g., 'Cool, dark, dry place')",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="seed",
            name="variety",
            field=models.CharField(
                blank=True,
                help_text="Specific variety name (e.g., 'Beefsteak')",
                max_length=100,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="seed",
            name="viability_period_months",
            field=models.IntegerField(
                blank=True,
                help_text="Typical viability period in months under optimal storage",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="soilprofile",
            name="description",
            field=models.TextField(
                blank=True,
                help_text="General description of the soil profile",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="soilprofile",
            name="drainage",
            field=models.CharField(
                blank=True,
                choices=[
                    ("PO", "Poor"),
                    ("MO", "Moderate"),
                    ("GO", "Good"),
                    ("EX", "Excessive"),
                    ("UNK", "Unknown"),
                ],
                max_length=3,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="soilprofile",
            name="moisture_retention",
            field=models.CharField(
                blank=True,
                choices=[
                    ("LO", "Low"),
                    ("ME", "Medium"),
                    ("HI", "High"),
                    ("UNK", "Unknown"),
                ],
                max_length=3,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="soilprofile",
            name="organic_matter_content",
            field=models.CharField(
                blank=True,
                choices=[
                    ("LO", "Low"),
                    ("ME", "Medium"),
                    ("HI", "High"),
                    ("UNK", "Unknown"),
                ],
                max_length=3,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="soilprofile",
            name="soil_type",
            field=models.CharField(
                blank=True,
                choices=[
                    ("CL", "Clay"),
                    ("SA", "Sandy"),
                    ("SI", "Silty"),
                    ("LO", "Loam"),
                    ("PE", "Peaty"),
                    ("CH", "Chalky"),
                    ("UNK", "Unknown"),
                ],
                max_length=3,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="soilprofile",
            name="structure",
            field=models.CharField(
                blank=True,
                choices=[
                    ("GR", "Granular"),
                    ("BL", "Blocky"),
                    ("PL", "Platy"),
                    ("MA", "Massive"),
                    ("SG", "Single-grained"),
                    ("UNK", "Unknown"),
                ],
                max_length=3,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="companionship",
            name="id",
            field=models.BigAutoField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="disease",
            name="cause",
            field=models.CharField(
                blank=True,
                help_text="Specific cause if known (e.g., 'Alternaria solani')",
                max_length=100,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="disease",
            name="common_name",
            field=models.CharField(max_length=100, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name="disease",
            name="description",
            field=models.TextField(
                blank=True, help_text="Description of the disease", null=True
            ),
        ),
        migrations.AlterField(
            model_name="disease",
            name="symptoms",
            field=models.TextField(
                blank=True, help_text="Symptoms caused by the disease", null=True
            ),
        ),
        migrations.AlterField(
            model_name="fertilizer",
            name="npk_ratio",
            field=models.CharField(
                blank=True,
                help_text="NPK ratio as string (e.g., '10-10-10', '5-2-3+Fe')",
                max_length=30,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="pest",
            name="common_name",
            field=models.CharField(max_length=100, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name="pest",
            name="description",
            field=models.TextField(
                blank=True,
                help_text="Description of the pest, lifecycle, etc.",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="pest",
            name="symptoms",
            field=models.TextField(
                blank=True, help_text="Symptoms caused by the pest", null=True
            ),
        ),
        migrations.AlterField(
            model_name="plant",
            name="avg_height_inches",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Typical mature height range in inches",
                max_digits=6,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="plant",
            name="avg_spread_inches",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Typical mature lateral spread range in inches",
                max_digits=6,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="plant",
            name="common_name",
            field=models.CharField(
                help_text="Primary common name", max_length=150, null=True
            ),
        ),
        migrations.AlterField(
            model_name="plant",
            name="days_to_maturity_max",
            field=models.IntegerField(
                blank=True,
                help_text="Maximum days from seed/transplant to first harvest/flowering",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="plant",
            name="days_to_maturity_min",
            field=models.IntegerField(
                blank=True,
                help_text="Minimum days from seed/transplant to first harvest/flowering",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="plant",
            name="growth_habit",
            field=models.CharField(
                blank=True,
                choices=[
                    ("VI", "Vine"),
                    ("SH", "Shrub"),
                    ("TR", "Tree"),
                    ("GC", "Groundcover"),
                    ("HB", "Herbaceous"),
                    ("BU", "Bulb"),
                ],
                max_length=2,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="plant",
            name="npk_preference",
            field=models.CharField(
                blank=True,
                help_text="Base NPK needs (e.g., '5-10-5', 'High N, Moderate P, Low K')",
                max_length=100,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="plant",
            name="plant_type",
            field=models.CharField(
                blank=True,
                help_text="General type like Vegetable, Herb, Flower",
                max_length=50,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="plant",
            name="scientific_name",
            field=models.CharField(
                help_text="Unique scientific name (Genus species)",
                max_length=255,
                null=True,
                unique=True,
            ),
        ),
        migrations.AlterField(
            model_name="plant",
            name="soil_preference",
            field=models.ForeignKey(
                blank=True,
                help_text="Link to preferred general soil profile(s)",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="preferred_by_plants",
                to="horticulture.soilprofile",
            ),
        ),
        migrations.AlterField(
            model_name="region",
            name="description",
            field=models.TextField(
                blank=True,
                help_text="Description of the zone (e.g., 'Average minimum winter temperature 0 to 5 °F')",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="region",
            name="name",
            field=models.CharField(
                blank=True,
                help_text="Optional descriptive name for the region/zone",
                max_length=100,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="seed",
            name="days_to_germ_max",
            field=models.IntegerField(
                blank=True, help_text="Maximum days to germination", null=True
            ),
        ),
        migrations.AlterField(
            model_name="seed",
            name="days_to_germ_min",
            field=models.IntegerField(
                blank=True, help_text="Minimum days to germination", null=True
            ),
        ),
        migrations.AlterField(
            model_name="seed",
            name="germination_rate_pct",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Expected germination rate percentage",
                max_digits=5,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="seed",
            name="packet_info",
            field=models.JSONField(
                blank=True,
                help_text="Other info from packet (e.g., year packed, quantity, lot number)",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="seed",
            name="plant",
            field=models.ForeignKey(
                help_text="The plant species this seed belongs to",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="seeds",
                to="horticulture.plant",
            ),
        ),
        migrations.AlterField(
            model_name="seed",
            name="planting_depth_inches",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Recommended planting depth in inches",
                max_digits=4,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="seed",
            name="spacing_inches",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Recommended spacing between plants in inches",
                max_digits=5,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="soilprofile",
            name="name",
            field=models.CharField(
                help_text="Unique name for the soil profile (e.g., 'Generic Clay Loam')",
                max_length=100,
                null=True,
                unique=True,
            ),
        ),
        migrations.AlterField(
            model_name="soilprofile",
            name="ph_max",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Typical maximum pH value",
                max_digits=4,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="soilprofile",
            name="ph_min",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Typical minimum pH value",
                max_digits=4,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="usercontribution",
            name="entity_type",
            field=models.CharField(max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name="usercontribution",
            name="proposed_data",
            field=models.JSONField(null=True),
        ),
        migrations.AlterField(
            model_name="usercontribution",
            name="status",
            field=models.CharField(
                choices=[
                    ("pending", "Pending"),
                    ("approved", "Approved"),
                    ("rejected", "Rejected"),
                ],
                default="pending",
                max_length=20,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="usercontribution",
            name="user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="contributions",
                to="horticulture.user",
            ),
        ),
        migrations.AddField(
            model_name="companionship",
            name="interactions",
            field=models.ManyToManyField(
                help_text="Specific interaction mechanisms (reason codes)",
                related_name="plant_pairings",
                to="horticulture.companionplantinginteraction",
            ),
        ),
        migrations.RemoveField(
            model_name="companionship",
            name="description",
        ),
        migrations.RemoveField(
            model_name="companionship",
            name="mechanism",
        ),
        migrations.RemoveField(
            model_name="companionship",
            name="plant1",
        ),
        migrations.RemoveField(
            model_name="companionship",
            name="plant2",
        ),
        migrations.RemoveField(
            model_name="companionship",
            name="relationship_type",
        ),
        migrations.RemoveField(
            model_name="region",
            name="first_frost_avg",
        ),
        migrations.RemoveField(
            model_name="region",
            name="hardiness_zone",
        ),
        migrations.RemoveField(
            model_name="region",
            name="last_frost_avg",
        ),
    ]
