# Generated by Django 5.2 on 2025-04-15 04:06

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Companionship",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "relationship_type",
                    models.CharField(
                        choices=[
                            ("BENEFICIAL", "Beneficial"),
                            ("DETRIMENTAL", "Detrimental"),
                            ("NEUTRAL", "Neutral"),
                        ],
                        max_length=20,
                    ),
                ),
                ("mechanism", models.TextField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Companionship",
                "verbose_name_plural": "Companionships",
            },
        ),
        migrations.CreateModel(
            name="Disease",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("common_name", models.CharField(max_length=100)),
                ("cause", models.CharField(blank=True, max_length=100, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("symptoms", models.TextField(blank=True, null=True)),
                ("control_organic", models.TextField(blank=True, null=True)),
                ("control_chemical", models.TextField(blank=True, null=True)),
                ("image_url", models.URLField(blank=True, max_length=255, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Fertilizer",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
                ("type", models.CharField(blank=True, max_length=50, null=True)),
                ("npk_ratio", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "nitrogen_pct",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "phosphorus_pct",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "potassium_pct",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("usage_instructions", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Pest",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("common_name", models.CharField(max_length=100)),
                (
                    "scientific_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("symptoms", models.TextField(blank=True, null=True)),
                ("control_organic", models.TextField(blank=True, null=True)),
                ("control_chemical", models.TextField(blank=True, null=True)),
                ("image_url", models.URLField(blank=True, max_length=255, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "hardiness_zone",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("first_frost_avg", models.DateField(blank=True, null=True)),
                ("last_frost_avg", models.DateField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="SoilProfile",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
                ("type", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "ph_min",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=4, null=True
                    ),
                ),
                (
                    "ph_max",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=4, null=True
                    ),
                ),
                ("nutrient_levels", models.JSONField(blank=True, null=True)),
                ("amendments_rec", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("username", models.CharField(max_length=150, unique=True)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("password_hash", models.CharField(max_length=128)),
                ("role", models.CharField(default="user", max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Plant",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("common_name", models.CharField(max_length=100)),
                ("scientific_name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("plant_type", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "sun_exposure",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("water_needs", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "npk_preference",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "avg_height_inches",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                (
                    "avg_spread_inches",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                (
                    "growth_habit",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("days_to_maturity_min", models.IntegerField(blank=True, null=True)),
                ("days_to_maturity_max", models.IntegerField(blank=True, null=True)),
                ("image_url", models.URLField(blank=True, max_length=255, null=True)),
                ("version", models.IntegerField(default=1)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "companions",
                    models.ManyToManyField(
                        related_name="companion_to",
                        through="horticulture.Companionship",
                        to="horticulture.plant",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="companionship",
            name="plant1",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="companionship_from",
                to="horticulture.plant",
            ),
        ),
        migrations.AddField(
            model_name="companionship",
            name="plant2",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="companionship_to",
                to="horticulture.plant",
            ),
        ),
        migrations.CreateModel(
            name="PlantDisease",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "disease",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="horticulture.disease",
                    ),
                ),
                (
                    "plant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="horticulture.plant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Plant Disease",
                "verbose_name_plural": "Plant Diseases",
                "unique_together": {("plant", "disease")},
            },
        ),
        migrations.AddField(
            model_name="plant",
            name="diseases",
            field=models.ManyToManyField(
                related_name="plants",
                through="horticulture.PlantDisease",
                to="horticulture.disease",
            ),
        ),
        migrations.CreateModel(
            name="PlantPest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "pest",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="horticulture.pest",
                    ),
                ),
                (
                    "plant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="horticulture.plant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Plant Pest",
                "verbose_name_plural": "Plant Pests",
                "unique_together": {("plant", "pest")},
            },
        ),
        migrations.AddField(
            model_name="plant",
            name="pests",
            field=models.ManyToManyField(
                related_name="plants",
                through="horticulture.PlantPest",
                to="horticulture.pest",
            ),
        ),
        migrations.AddField(
            model_name="plant",
            name="suitable_region",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="plants",
                to="horticulture.region",
            ),
        ),
        migrations.CreateModel(
            name="Seed",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("variety_name", models.CharField(max_length=100)),
                ("source", models.CharField(blank=True, max_length=100, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "germination_rate_pct",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("days_to_germ_min", models.IntegerField(blank=True, null=True)),
                ("days_to_germ_max", models.IntegerField(blank=True, null=True)),
                (
                    "planting_depth_inches",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=4, null=True
                    ),
                ),
                (
                    "spacing_inches",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("packet_info", models.JSONField(blank=True, null=True)),
                ("image_url", models.URLField(blank=True, max_length=255, null=True)),
                ("version", models.IntegerField(default=1)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "plant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="seeds",
                        to="horticulture.plant",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="plant",
            name="soil_preference",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="plants",
                to="horticulture.soilprofile",
            ),
        ),
        migrations.CreateModel(
            name="UserContribution",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("entity_type", models.CharField(max_length=50)),
                ("entity_id", models.CharField(blank=True, max_length=50, null=True)),
                ("proposed_data", models.JSONField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("admin_notes", models.TextField(blank=True, null=True)),
                (
                    "submitted_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("reviewed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "reviewed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reviewed_contributions",
                        to="horticulture.user",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contributions",
                        to="horticulture.user",
                    ),
                ),
            ],
        ),
        migrations.AlterUniqueTogether(
            name="companionship",
            unique_together={("plant1", "plant2", "relationship_type")},
        ),
    ]
